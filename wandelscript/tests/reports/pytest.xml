<?xml version="1.0" encoding="utf-8"?><testsuites><testsuite name="pytest" errors="0" failures="4" skipped="0" tests="37" time="9427.448" timestamp="2024-01-02T13:27:38.653539" hostname="AirM2.local"><testcase classname="wandelscript.tests.test_examples" name="test_example[scope]" time="3.674" /><testcase classname="wandelscript.tests.test_examples" name="test_example[tower_of_hanoi]" time="75.330" /><testcase classname="wandelscript.tests.test_examples" name="test_example[edge_pattern]" time="1.284" /><testcase classname="wandelscript.tests.test_examples" name="test_example[function]" time="0.132" /><testcase classname="wandelscript.tests.test_examples" name="test_example[comments]" time="0.102" /><testcase classname="wandelscript.tests.test_examples" name="test_example[coordinate_systems]" time="0.104" /><testcase classname="wandelscript.tests.test_examples" name="test_example[blending]" time="0.429" /><testcase classname="wandelscript.tests.test_examples" name="test_example[edge_pattern_manhatten]" time="1.164" /><testcase classname="wandelscript.tests.test_examples" name="test_example[array]" time="0.110" /><testcase classname="wandelscript.tests.test_examples" name="test_example[wp393]" time="0.571" /><testcase classname="wandelscript.tests.test_examples" name="test_example[pose_handling]" time="0.153" /><testcase classname="wandelscript.tests.test_examples" name="test_example[print]" time="0.026" /><testcase classname="wandelscript.tests.test_examples" name="test_example[pose]" time="0.197" /><testcase classname="wandelscript.tests.test_examples" name="test_example[move_with_velocity]" time="0.408" /><testcase classname="wandelscript.tests.test_examples" name="test_example[move]" time="0.323" /><testcase classname="wandelscript.tests.test_examples" name="test_example[assignment]" time="0.124" /><testcase classname="wandelscript.tests.test_examples" name="test_example[find_edge_from_4_poses]" time="1.563"><failure message="NotImplementedError: Circular motion cannot be the first motion in a motion trajectory">example_name = 'find_edge_from_4_poses'

    @pytest.mark.parametrize("example_name", EXAMPLES)
    def test_example(example_name):
        code, data, config = EXAMPLES[example_name]
        robot_cell = RobotCell.from_json(config)
&gt;       runner = wandelscript.run(code, robot_cell)

test_examples.py:16: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../runner.py:285: in run
    runner.start(sync=True)
../runner.py:247: in start
    raise self._exc
../runner.py:172: in _run
    skill(store)
../metamodel.py:1277: in __call__
    self.body(store=store)
../metamodel.py:133: in __call__
    statement(store)
../metamodel.py:403: in __call__
    store.environment.run()
../action_queue.py:120: in run
    return anyio.run(group)
../../.venv/lib/python3.9/site-packages/anyio/_core/_eventloop.py:68: in run
    return asynclib.run(func, *args, **backend_options)
../../.venv/lib/python3.9/site-packages/anyio/_backends/_asyncio.py:204: in run
    return native_run(wrapper(), debug=debug)
/Users/cbiering/.pyenv/versions/3.9.16/lib/python3.9/asyncio/runners.py:44: in run
    return loop.run_until_complete(main)
/Users/cbiering/.pyenv/versions/3.9.16/lib/python3.9/asyncio/base_events.py:647: in run_until_complete
    return future.result()
../../.venv/lib/python3.9/site-packages/anyio/_backends/_asyncio.py:199: in wrapper
    return await func(*args)
../action_queue.py:118: in group
    tg.start_soon(wait_for_stop)
../../.venv/lib/python3.9/site-packages/anyio/_backends/_asyncio.py:597: in __aexit__
    raise exceptions[0]
../action_queue.py:113: in execute
    await self._run()
../action_queue.py:90: in _run
    await self._perform_motions(motion_iter)
../action_queue.py:61: in _perform_motions
    async for motion_state in motion_iter:
../../../pyriphery/pyriphery/robotics/robot.py:55: in planned_motion
    async for motion_state in motion_iter:
../../../pyriphery/pyriphery/robotics/simulation.py:187: in _planned_motion_iter
    pose_path = motion_trajectory_to_pose_path(transformed_path)
../../../pyjectory/pyjectory/mapper.py:70: in motion_trajectory_to_pose_path
    segments = [
../../../pyjectory/pyjectory/mapper.py:71: in &lt;listcomp&gt;
    _to_elementary_pose_path(motion, previous_motion)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

motion = Circular(type='circular', settings=MotionSettings(velocity=inf, acceleration=inf, orientation_velocity=inf, orientatio...547, z=272.3694938564182), orientation=Orientation(x=-1.994468590655563, y=2.020257565358632, z=-0.39342058240123257)))
previous_motion = None

    def _to_elementary_pose_path(motion: CartesianMotion, previous_motion: Optional[CartesianMotion]) -&gt; PosePath:
        """Return segment for a keyframe sequence describing a single segment"""
    
        position: Vector3dPath
    
        if isinstance(motion, (Linear, P2P)):
            if previous_motion is None:
                position = Point3d(motion.target.position.to_tuple())
            else:
                position = Line(start=previous_motion.target.position.to_tuple(), end=motion.target.position.to_tuple())
        elif isinstance(motion, Circular):
            if previous_motion is None:
&gt;               raise NotImplementedError("Circular motion cannot be the first motion in a motion trajectory")
E               NotImplementedError: Circular motion cannot be the first motion in a motion trajectory

../../../pyjectory/pyjectory/mapper.py:47: NotImplementedError</failure></testcase><testcase classname="wandelscript.tests.test_examples" name="test_example[move_via_expression]" time="0.309" /><testcase classname="wandelscript.tests.test_examples" name="test_example[default]" time="0.479" /><testcase classname="wandelscript.tests.test_examples" name="test_example[loops]" time="0.185" /><testcase classname="wandelscript.tests.test_examples" name="test_example[context]" time="0.116" /><testcase classname="wandelscript.tests.test_examples" name="test_example[whitespaces]" time="0.037" /><testcase classname="wandelscript.tests.test_examples" name="test_example[async_write]" time="0.376"><failure message="AssertionError: a&#10;assert 0.0 == True">example_name = 'async_write'

    @pytest.mark.parametrize("example_name", EXAMPLES)
    def test_example(example_name):
        code, data, config = EXAMPLES[example_name]
        robot_cell = RobotCell.from_json(config)
        runner = wandelscript.run(code, robot_cell)
        store = runner.store
        for key, value in data.items():
            if isinstance(value, list):
                value = tuple(tuple(v) if isinstance(v, list) else v for v in value)
            if isinstance(value, Pose):
                print(value, store[key])
                assert np.allclose(value.position, store[key].position, atol=1e-3, rtol=1e-3)
                assert np.allclose(value.orientation, store[key].orientation, atol=1e-3, rtol=1e-3)
            elif isinstance(value, (Position, Orientation)):
                assert np.allclose(value, store[key], atol=1e-3, rtol=1e-3)
            else:
&gt;               assert value == store[key], key
E               AssertionError: a
E               assert 0.0 == True

test_examples.py:28: AssertionError</failure></testcase><testcase classname="wandelscript.tests.test_examples" name="test_example[palletizing-ur10e-liftkit]" time="19.835" /><testcase classname="wandelscript.tests.test_examples" name="test_example[edge_pattern_line]" time="1.692" /><testcase classname="wandelscript.tests.test_examples" name="test_example[ifelse]" time="0.112" /><testcase classname="wandelscript.tests.test_examples" name="test_example[switch]" time="0.095" /><testcase classname="wandelscript.tests.test_examples" name="test_example[interrupt]" time="47.377" /><testcase classname="wandelscript.tests.test_examples" name="test_example[tcp_change]" time="0.577" /><testcase classname="wandelscript.tests.test_examples" name="test_example[io]" time="0.071" /><testcase classname="wandelscript.tests.test_examples" name="test_example[empty]" time="0.015" /><testcase classname="wandelscript.tests.test_examples" name="test_example[expressions]" time="0.167" /><testcase classname="wandelscript.tests.test_examples" name="test_example[wait]" time="0.030" /><testcase classname="wandelscript.tests.test_examples" name="test_example[get_pose]" time="0.327"><failure message="assert False&#10; +  where False = &lt;function allclose at 0x105f298b0&gt;(Position(x=10.0, y=2.0, z=3.0), Position(x=0.0, y=0.0, z=0.0), atol=0.001, rtol=0.001)&#10; +    where &lt;function allclose at 0x105f298b0&gt; = np.allclose&#10; +    and   Position(x=10.0, y=2.0, z=3.0) = Pose(position=Position(x=10.0, y=2.0, z=3.0), orientation=Orientation(x=2.0, y=2.0, z=0.0)).position&#10; +    and   Position(x=0.0, y=0.0, z=0.0) = Pose(position=Position(x=0.0, y=0.0, z=0.0), orientation=Orientation(x=0.0, y=0.0, z=0.0)).position">example_name = 'get_pose'

    @pytest.mark.parametrize("example_name", EXAMPLES)
    def test_example(example_name):
        code, data, config = EXAMPLES[example_name]
        robot_cell = RobotCell.from_json(config)
        runner = wandelscript.run(code, robot_cell)
        store = runner.store
        for key, value in data.items():
            if isinstance(value, list):
                value = tuple(tuple(v) if isinstance(v, list) else v for v in value)
            if isinstance(value, Pose):
                print(value, store[key])
&gt;               assert np.allclose(value.position, store[key].position, atol=1e-3, rtol=1e-3)
E               assert False
E                +  where False = &lt;function allclose at 0x105f298b0&gt;(Position(x=10.0, y=2.0, z=3.0), Position(x=0.0, y=0.0, z=0.0), atol=0.001, rtol=0.001)
E                +    where &lt;function allclose at 0x105f298b0&gt; = np.allclose
E                +    and   Position(x=10.0, y=2.0, z=3.0) = Pose(position=Position(x=10.0, y=2.0, z=3.0), orientation=Orientation(x=2.0, y=2.0, z=0.0)).position
E                +    and   Position(x=0.0, y=0.0, z=0.0) = Pose(position=Position(x=0.0, y=0.0, z=0.0), orientation=Orientation(x=0.0, y=0.0, z=0.0)).position

test_examples.py:23: AssertionError</failure></testcase><testcase classname="wandelscript.tests.test_examples" name="test_example[interpolation]" time="0.167" /><testcase classname="wandelscript.tests.test_examples" name="test_example[try]" time="0.436"><failure message="assert False&#10; +  where False = &lt;function allclose at 0x105f298b0&gt;(Position(x=0.0, y=0.0, z=2.0), Position(x=0.0, y=0.0, z=0.0), atol=0.001, rtol=0.001)&#10; +    where &lt;function allclose at 0x105f298b0&gt; = np.allclose&#10; +    and   Position(x=0.0, y=0.0, z=2.0) = Pose(position=Position(x=0.0, y=0.0, z=2.0), orientation=Orientation(x=0.0, y=0.0, z=0.0)).position&#10; +    and   Position(x=0.0, y=0.0, z=0.0) = Pose(position=Position(x=0.0, y=0.0, z=0.0), orientation=Orientation(x=0.0, y=0.0, z=0.0)).position">example_name = 'try'

    @pytest.mark.parametrize("example_name", EXAMPLES)
    def test_example(example_name):
        code, data, config = EXAMPLES[example_name]
        robot_cell = RobotCell.from_json(config)
        runner = wandelscript.run(code, robot_cell)
        store = runner.store
        for key, value in data.items():
            if isinstance(value, list):
                value = tuple(tuple(v) if isinstance(v, list) else v for v in value)
            if isinstance(value, Pose):
                print(value, store[key])
&gt;               assert np.allclose(value.position, store[key].position, atol=1e-3, rtol=1e-3)
E               assert False
E                +  where False = &lt;function allclose at 0x105f298b0&gt;(Position(x=0.0, y=0.0, z=2.0), Position(x=0.0, y=0.0, z=0.0), atol=0.001, rtol=0.001)
E                +    where &lt;function allclose at 0x105f298b0&gt; = np.allclose
E                +    and   Position(x=0.0, y=0.0, z=2.0) = Pose(position=Position(x=0.0, y=0.0, z=2.0), orientation=Orientation(x=0.0, y=0.0, z=0.0)).position
E                +    and   Position(x=0.0, y=0.0, z=0.0) = Pose(position=Position(x=0.0, y=0.0, z=0.0), orientation=Orientation(x=0.0, y=0.0, z=0.0)).position

test_examples.py:23: AssertionError</failure></testcase><testcase classname="wandelscript.tests.test_examples" name="test_example[vision_move]" time="0.455" /><testcase time="0.001" /></testsuite></testsuites>