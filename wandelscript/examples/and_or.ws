# Test `and` and `or` operators...
# 1. with primitive types
# 2. with references
# 3. `and` and `or` in the mix to showcase the operator precedence
# 4. `and` and `or` in the mix with other operators to showcase operator precedencee in combination

# Combinations with simple constants

a1 = 0 and 0
o1 = 0 or 0
a2 = 0 and 2
o2 = 0 or 2
a3 = 0 and 5
o3 = 0 or 5
a4 = 0 and -111
o4 = 0 or -111
a5 = 0 and 12.3
o5 = 0 or 12.3
a6 = 0 and False
o6 = 0 or False
a7 = 0 and True
o7 = 0 or True
a8 = 0 and 'nonempty string'
o8 = 0 or 'nonempty string'
a9 = 0 and ''
o9 = 0 or ''
a10 = 2 and 0
o10 = 2 or 0
a11 = 2 and 2
o11 = 2 or 2
a12 = 2 and 5
o12 = 2 or 5
a13 = 2 and -111
o13 = 2 or -111
a14 = 2 and 12.3
o14 = 2 or 12.3
a15 = 2 and False
o15 = 2 or False
a16 = 2 and True
o16 = 2 or True
a17 = 2 and 'nonempty string'
o17 = 2 or 'nonempty string'
a18 = 2 and ''
o18 = 2 or ''
a19 = 5 and 0
o19 = 5 or 0
a20 = 5 and 2
o20 = 5 or 2
a21 = 5 and 5
o21 = 5 or 5
a22 = 5 and -111
o22 = 5 or -111
a23 = 5 and 12.3
o23 = 5 or 12.3
a24 = 5 and False
o24 = 5 or False
a25 = 5 and True
o25 = 5 or True
a26 = 5 and 'nonempty string'
o26 = 5 or 'nonempty string'
a27 = 5 and ''
o27 = 5 or ''
a28 = -111 and 0
o28 = -111 or 0
a29 = -111 and 2
o29 = -111 or 2
a30 = -111 and 5
o30 = -111 or 5
a31 = -111 and -111
o31 = -111 or -111
a32 = -111 and 12.3
o32 = -111 or 12.3
a33 = -111 and False
o33 = -111 or False
a34 = -111 and True
o34 = -111 or True
a35 = -111 and 'nonempty string'
o35 = -111 or 'nonempty string'
a36 = -111 and ''
o36 = -111 or ''
a37 = 12.3 and 0
o37 = 12.3 or 0
a38 = 12.3 and 2
o38 = 12.3 or 2
a39 = 12.3 and 5
o39 = 12.3 or 5
a40 = 12.3 and -111
o40 = 12.3 or -111
a41 = 12.3 and 12.3
o41 = 12.3 or 12.3
a42 = 12.3 and False
o42 = 12.3 or False
a43 = 12.3 and True
o43 = 12.3 or True
a44 = 12.3 and 'nonempty string'
o44 = 12.3 or 'nonempty string'
a45 = 12.3 and ''
o45 = 12.3 or ''
a46 = False and 0
o46 = False or 0
a47 = False and 2
o47 = False or 2
a48 = False and 5
o48 = False or 5
a49 = False and -111
o49 = False or -111
a50 = False and 12.3
o50 = False or 12.3
a51 = False and False
o51 = False or False
a52 = False and True
o52 = False or True
a53 = False and 'nonempty string'
o53 = False or 'nonempty string'
a54 = False and ''
o54 = False or ''
a55 = True and 0
o55 = True or 0
a56 = True and 2
o56 = True or 2
a57 = True and 5
o57 = True or 5
a58 = True and -111
o58 = True or -111
a59 = True and 12.3
o59 = True or 12.3
a60 = True and False
o60 = True or False
a61 = True and True
o61 = True or True
a62 = True and 'nonempty string'
o62 = True or 'nonempty string'
a63 = True and ''
o63 = True or ''
a64 = 'nonempty string' and 0
o64 = 'nonempty string' or 0
a65 = 'nonempty string' and 2
o65 = 'nonempty string' or 2
a66 = 'nonempty string' and 5
o66 = 'nonempty string' or 5
a67 = 'nonempty string' and -111
o67 = 'nonempty string' or -111
a68 = 'nonempty string' and 12.3
o68 = 'nonempty string' or 12.3
a69 = 'nonempty string' and False
o69 = 'nonempty string' or False
a70 = 'nonempty string' and True
o70 = 'nonempty string' or True
a71 = 'nonempty string' and 'nonempty string'
o71 = 'nonempty string' or 'nonempty string'
a72 = 'nonempty string' and ''
o72 = 'nonempty string' or ''
a73 = '' and 0
o73 = '' or 0
a74 = '' and 2
o74 = '' or 2
a75 = '' and 5
o75 = '' or 5
a76 = '' and -111
o76 = '' or -111
a77 = '' and 12.3
o77 = '' or 12.3
a78 = '' and False
o78 = '' or False
a79 = '' and True
o79 = '' or True
a80 = '' and 'nonempty string'
o80 = '' or 'nonempty string'
a81 = '' and ''
o81 = '' or ''


# Test that operators work with references as well

i = 42
t = True
a82 = i and t
o82 = i or t


# Test operator precedence

tatat = True and True and True
tatot = True and True or True
totat = True or True and True
totot = True or True or True
tataf = True and True and False
tatof = True and True or False
totaf = True or True and False  # results in False! - different than Python operator precedence
totof = True or True or False
tafat = True and False and True
tafot = True and False or True
tofat = True or False and True
tofot = True or False or True
tafaf = True and False and False
tafof = True and False or False
tofaf = True or False and False  # results in False! - different than Python operator precedence
tofof = True or False or False
fatat = False and True and True
fatot = False and True or True
fotat = False or True and True
fotot = False or True or True
fataf = False and True and False
fatof = False and True or False
fotaf = False or True and False
fotof = False or True or False
fafat = False and False and True
fafot = False and False or True
fofat = False or False and True
fofot = False or False or True
fafaf = False and False and False
fafof = False and False or False
fofaf = False or False and False
fofof = False or False or False


# Operator precedence in mix with multiplication and addition

a = 1 * 2 and 3 + 4
b = 1 + 2 * 3 and 4
c = 1 + 2 * 3 and 4 + 5
d = 1 + 2 * 3 or 4 + 5
e = 1 + 2 and 3 * 4
f = 1 + 2 and 3 * 4 + 5
g = 1 + 2 and 3 + 4 + 5
h = 1 + 2 and 3 or 4 + 5
i = 1 + 2 and 4
j = 1 + 2 and 4 + 5
k = 1 + 2 or 3 + 4 + 5
l = 1 + 2 or 3 and 4  # results in 4! - different than Python operator precedence
m = 1 + 2 or 3 and 4 + 5  # results in 9! - different than Python operator precedence
n = 1 and 2 + 3 * 4 + 5
o = 1 and 2 + 3 or 4
p = 1 and 2 or 3
q = 1 and 2 or 3 + 4 + 5
r = 1 or 2 * 3
s = 1 or 2 * 3 + 4
t = 1 or 2 + 3 * 4
u = 1 or 2 + 3 * 4 + 5
v = 1 or 2 + 3 + 4 + 5
w = 1 or 2 and 3  # results in 3! - different than Python operator precedence
x = 1 or 2 and 3 * 4 + 5  # results in 17! - different than Python operator precedence
y = 1 or 2 and 3 + 4 + 5  # results in 12! - different than Python operator precedence
z = not 1 and 2 * 3 + 4
aa = not 1 and 2 + 3 * 4
ab = not 1 or 2 + 3
ac = not 1 or 2 + 3 * 4
