[project]
name = "wandelscript"
version = "0.5.3"
description = "Wandelscript definition, parser, type checker & runtime"
authors = [
    { name = "Christoph Biering", email = "christoph.biering@wandelbots.com" },
    { name = "Daniel Vorberg" },
    { name = "Dirk Sonnemann", email = "dirk.sonnemann@wandelbots.com" },
    { name = "Andreas Langenhagen", email = "andreas.langenhagen@wandelbots.com" },
    { name = "Mahsum Demir", email = "mahsum.demir@wandelbots.com" },
]
requires-python = "~=3.10"
readme = "README.md"
dependencies = [
    "aiostream>=0.6.1,<0.7",
    "antlr4-python3-runtime==4.13.1",
    "anyio>=4,<5",
    "numpy>=2.2.1,<3",
    "pydantic>=2.10.3,<3",
    "wandelbots-nova>=0.48.1",
    "exceptiongroup>=1.2.2,<2",
    "geometricalgebra>=0.1.3,<0.2",
    "python-dotenv>=1.0.1,<2",
    "typer[all]>=0.12,<0.16",
]

[project.scripts]
wandelscript = "wandelscript.cli:app"
ws = "wandelscript.cli:app"

[dependency-groups]
ci = [
    "pytest>=8.3.5,<9",
    "mypy>=1.15.0,<2",
    "ruff>=0.11.2,<0.12",
    "darglint==1.8.1",
    "pytest-loguru>=0.4.0,<0.5",
    "pytest-asyncio>=0.26.0,<0.27",
    "wat-inspector>=0.4.0,<0.5",
    "pre-commit>=4.0.1,<5",
    "icecream>=2.1.4,<3",
    "glom>=24.11.0,<25",
]
dev = ["antlr4-tools>=0.2.1,<0.3"]

[tool.uv]
default-groups = [
    "ci",
    "dev",
]

[tool.hatch.build.targets.sdist]
include = ["wandelscript"]

[tool.hatch.build.targets.wheel]
include = ["wandelscript"]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.pytest.ini_options]
log_cli = false
log_cli_level = "INFO"
log_cli_format = "%(asctime)s [%(levelname)8s] %(message)s (%(filename)s:%(lineno)s)"
log_cli_date_format = "%Y-%m-%d %H:%M:%S"
addopts = """
    --doctest-modules
    --junitxml=reports/pytest.xml
    --ignore=wandelscript/tests/test_plugin_client.py
"""
junit_family = "xunit2"
norecursedirs = "develop .ipynb_checkpoints .venv .tox *.egg"
testpaths = """
    wandelscript
"""

[tool.semantic_release]
version_toml = ["pyproject.toml:project.version"]
assets = []
build_command = "pip install uv && uv build"
build_command_env = []
commit_message = "{version}\n\nAutomatically generated by python-semantic-release"
commit_parser = "angular"
logging_use_named_masks = false
major_on_zero = true
allow_zero_version = true
no_git_verify = false
tag_format = "v{version}"

[tool.semantic_release.branches.main]
match = "(main|master)"
prerelease_token = "rc"
prerelease = false

[tool.semantic_release.changelog]
changelog_file = "CHANGELOG.md"
exclude_commit_patterns = []
mode = "init"
insertion_flag = "<!-- version list -->"
template_dir = "templates"

[tool.semantic_release.changelog.default_templates]
changelog_file = "CHANGELOG.md"
output_format = "md"

[tool.semantic_release.changelog.environment]
block_start_string = "{%"
block_end_string = "%}"
variable_start_string = "{{"
variable_end_string = "}}"
comment_start_string = "{#"
comment_end_string = "#}"
trim_blocks = false
lstrip_blocks = false
newline_sequence = "\n"
keep_trailing_newline = false
extensions = []
autoescape = false

[tool.semantic_release.commit_author]
env = "GIT_COMMIT_AUTHOR"
default = "semantic-release <semantic-release>"

[tool.semantic_release.commit_parser_options]
allowed_tags = ["chore", "feat", "fix"]
minor_tags = ["feat"]
patch_tags = ["fix", "chore"]
default_bump_level = 0

[tool.semantic_release.remote]
name = "origin"
type = "github"
ignore_token_for_push = false
insecure = false

[tool.semantic_release.publish]
dist_glob_patterns = ["dist/*"]
upload_to_vcs_release = true
