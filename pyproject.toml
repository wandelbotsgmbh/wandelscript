[tool.poetry]
name = "wandelscript"
version = "0.2.1"
description = "Wandelscript definition, parser, type checker & runtime"
authors = [
    "Christoph Biering <christoph.biering@wandelbots.com>",
    "Daniel Vorberg",
    "Dirk Sonnemann <dirk.sonnemann@wandelbots.com>",
    "Andreas Langenhagen <andreas.langenhagen@wandelbots.com>",
    "Mahsum Demir <mahsum.demir@wandelbots.com>"
]
readme = "README.md"
packages = [
    { include = "wandelscript" }
]

[tool.poetry.dependencies]
python = "^3.10"
aiostream = "^0.6.1"
antlr4-python3-runtime = "4.13.1"
anyio = "^4"
numpy = "^2.2.1"
pydantic = "^2.10.3"
wandelbots-nova = "^0.42.2"
exceptiongroup = "^1.2.2"
geometricalgebra = "^0.1.3"
# TODO: would like to remove this dependency
pillow = "^11.1.0"
# TODO: move to wandelbots-nova
asyncua = "^1.1.5"
# TODO: needs to be removed from nova
python-dotenv = "^1.0.1"

[tool.poetry.group.dev.dependencies]
pytest = "^8.3.4"
mypy = "^1.13.0"
ruff = "^0.8.2"
darglint = "1.8.1"
icecream = "2.1.3"
pytest-loguru = "0.2.0"
pytest-asyncio = "0.23.6"
antlr4-tools = "^0.2.1"
wat-inspector = "^0.4.0"
pre-commit = "^4.0.1"

[tool.pytest.ini_options]
log_cli = false
log_cli_level = "INFO"
log_cli_format = "%(asctime)s [%(levelname)8s] %(message)s (%(filename)s:%(lineno)s)"
log_cli_date_format = "%Y-%m-%d %H:%M:%S"
addopts = """
    --doctest-modules
    --junitxml=reports/pytest.xml
    --ignore=wandelscript/tests/test_plugin_client.py
"""
junit_family = "xunit2"
norecursedirs = "develop .ipynb_checkpoints .venv .tox *.egg"
testpaths = """
    wandelscript
"""

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.semantic_release]
version_toml = ["pyproject.toml:tool.poetry.version"]
assets = []
build_command = "pip install poetry && poetry build"
build_command_env = []
commit_message = "{version}\n\nAutomatically generated by python-semantic-release"
commit_parser = "angular"
logging_use_named_masks = false
major_on_zero = true
allow_zero_version = true
no_git_verify = false
tag_format = "v{version}"

[tool.semantic_release.branches.main]
match = "(main|master)"
prerelease_token = "rc"
prerelease = false

[tool.semantic_release.changelog]
changelog_file = "CHANGELOG.md"
exclude_commit_patterns = []
mode = "init"
insertion_flag = "<!-- version list -->"
template_dir = "templates"

[tool.semantic_release.changelog.default_templates]
changelog_file = "CHANGELOG.md"
output_format = "md"

[tool.semantic_release.changelog.environment]
block_start_string = "{%"
block_end_string = "%}"
variable_start_string = "{{"
variable_end_string = "}}"
comment_start_string = "{#"
comment_end_string = "#}"
trim_blocks = false
lstrip_blocks = false
newline_sequence = "\n"
keep_trailing_newline = false
extensions = []
autoescape = false

[tool.semantic_release.commit_author]
env = "GIT_COMMIT_AUTHOR"
default = "semantic-release <semantic-release>"

[tool.semantic_release.commit_parser_options]
allowed_tags = ["chore", "feat", "fix"]
minor_tags = ["feat"]
patch_tags = ["fix", "chore"]
default_bump_level = 0

[tool.semantic_release.remote]
name = "origin"
type = "github"
ignore_token_for_push = false
insecure = false

[tool.semantic_release.publish]
dist_glob_patterns = ["dist/*"]
upload_to_vcs_release = true
